{
  "swagger": "2.0",
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "APISecretHeader": {
      "type": "apiKey",
      "in": "header",
      "name": "secret"
    }
  },
  "security": [{
    "APISecretHeader": ["asdasd"]
  }],
  "info": {
    "title": "Demo",
    "description": "",
    "version": "8e7461abcf95e3a014f2ffc06c08b422d06460dd"
  },
  "parameters": {},
  "paths": {
    "/v2/files/": {
      "get": {
        "summary": "Get a list of files",
        "description": "The list can be filtered specifying the following parameters",
        "tags": ["Files"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "size",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "location",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "file",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "_id"
                  },
                  "creatorId": {
                    "type": "string",
                    "description": "creatorId"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "createdAt"
                  },
                  "updaterId": {
                    "type": "string",
                    "description": "updaterId"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "updatedAt"
                  },
                  "__STATE__": {
                    "type": "string",
                    "description": "__STATE__"
                  },
                  "name": {
                    "type": "string"
                  },
                  "size": {
                    "type": "number"
                  },
                  "location": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "post": {
        "summary": "Add a new item to the files collection",
        "tags": ["Files"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "name": {
                "type": "string"
              },
              "size": {
                "type": "number"
              },
              "location": {
                "type": "string"
              },
              "file": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "PUBLIC"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "Hexadecimal identifier of the document in the collection"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete items from the files collection",
        "tags": ["Files"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "size",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "location",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "file",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the files collection that match the query",
        "tags": ["Files"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "size",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "location",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "file",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "size": {
                    "type": "number"
                  },
                  "location": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "size": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "location": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "file": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {
                  "size": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {
                  "size": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "the number of documents that were modified"
            },
            "description": "the number of documents that were modified"
          }
        }
      }
    },
    "/v2/files/export": {
      "get": {
        "summary": "Export the files collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": ["Files"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "size",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "location",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "file",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/files/{id}": {
      "get": {
        "summary": "Find one item from the files collection by ID",
        "tags": ["Files"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "size",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "location",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "file",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "location": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the files collection",
        "tags": ["Files"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "size",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "location",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "file",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the files collection by ID",
        "tags": ["Files"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "size",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "location",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "file",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "size": {
                    "type": "number"
                  },
                  "location": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "size": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "location": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "file": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {
                  "size": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {
                  "size": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "location": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/files/validate": {
      "post": {
        "summary": "Return 200 if the body is valid for an insertion in the files collection",
        "tags": ["Files"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "name": {
                "type": "string"
              },
              "size": {
                "type": "number"
              },
              "location": {
                "type": "string"
              },
              "file": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "PUBLIC"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "enum": ["ok"]
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/files/count": {
      "get": {
        "summary": "Count the number of files",
        "tags": ["Files"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "size",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "location",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "file",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/files/upsert-one": {
      "post": {
        "summary": "Update an item of files if it is present, otherwise insert it",
        "tags": ["Files"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "size",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "location",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "file",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "size": {
                    "type": "number"
                  },
                  "location": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "size": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "location": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "file": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {
                  "size": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {
                  "size": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$setOnInsert": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "size": {
                    "type": "number"
                  },
                  "location": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "location": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/files/bulk": {
      "post": {
        "summary": "Insert new files",
        "tags": ["Files"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [],
              "properties": {
                "name": {
                  "type": "string"
                },
                "size": {
                  "type": "number"
                },
                "location": {
                  "type": "string"
                },
                "file": {
                  "type": "string"
                },
                "__STATE__": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                  "description": "The state of the document",
                  "default": "PUBLIC"
                }
              },
              "additionalProperties": false
            }
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "Hexadecimal identifier of the document in the collection"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of files, each one with its own modifications",
        "tags": ["Files"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "_st": {
                      "type": "string",
                      "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                      "default": "PUBLIC",
                      "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "name": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "location": {
                      "type": "string"
                    },
                    "file": {
                      "type": "string"
                    },
                    "_q": {
                      "type": "string",
                      "description": "Additional query part to forward to MongoDB"
                    }
                  },
                  "additionalProperties": false
                },
                "update": {
                  "type": "object",
                  "properties": {
                    "$set": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "size": {
                          "type": "number"
                        },
                        "location": {
                          "type": "string"
                        },
                        "file": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$unset": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "size": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "location": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "file": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$inc": {
                      "type": "object",
                      "properties": {
                        "size": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$mul": {
                      "type": "object",
                      "properties": {
                        "size": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$currentDate": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$push": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": ["filter", "update"]
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/files/{id}/state": {
      "post": {
        "summary": "Change state of an item of files",
        "tags": ["Files"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "size",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "location",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "file",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["stateTo"],
            "properties": {
              "stateTo": {
                "type": "string",
                "enum": ["PUBLIC", "TRASH", "DRAFT", "DELETED"]
              }
            }
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/files/state": {
      "post": {
        "summary": "Change state of items of files",
        "tags": ["Files"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "required": ["_id"],
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "name": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "location": {
                      "type": "string"
                    },
                    "file": {
                      "type": "string"
                    }
                  }
                },
                "stateTo": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"]
                }
              },
              "required": ["filter", "stateTo"],
              "additionalProperties": false
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of updated files"
            },
            "description": "Number of updated files"
          }
        }
      }
    },
    "/v2/groups/": {
      "get": {
        "summary": "Get a list of groups",
        "description": "The list can be filtered specifying the following parameters",
        "tags": ["Groups"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "label",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|label),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|label)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|label)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "_id"
                  },
                  "creatorId": {
                    "type": "string",
                    "description": "creatorId"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "createdAt"
                  },
                  "updaterId": {
                    "type": "string",
                    "description": "updaterId"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "updatedAt"
                  },
                  "__STATE__": {
                    "type": "string",
                    "description": "__STATE__"
                  },
                  "label": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "post": {
        "summary": "Add a new item to the groups collection",
        "tags": ["Groups"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "label": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "Hexadecimal identifier of the document in the collection"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete items from the groups collection",
        "tags": ["Groups"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "label",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the groups collection that match the query",
        "tags": ["Groups"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "label",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "the number of documents that were modified"
            },
            "description": "the number of documents that were modified"
          }
        }
      }
    },
    "/v2/groups/export": {
      "get": {
        "summary": "Export the groups collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": ["Groups"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "label",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|label),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|label)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|label)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/groups/{id}": {
      "get": {
        "summary": "Find one item from the groups collection by ID",
        "tags": ["Groups"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "label",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|label),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|label)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "label": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the groups collection",
        "tags": ["Groups"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "label",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the groups collection by ID",
        "tags": ["Groups"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "label",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "label": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/groups/validate": {
      "post": {
        "summary": "Return 200 if the body is valid for an insertion in the groups collection",
        "tags": ["Groups"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "label": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "enum": ["ok"]
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/groups/count": {
      "get": {
        "summary": "Count the number of groups",
        "tags": ["Groups"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "label",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/groups/upsert-one": {
      "post": {
        "summary": "Update an item of groups if it is present, otherwise insert it",
        "tags": ["Groups"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "label",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$setOnInsert": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "label": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/groups/bulk": {
      "post": {
        "summary": "Insert new groups",
        "tags": ["Groups"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [],
              "properties": {
                "label": {
                  "type": "string"
                },
                "__STATE__": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                  "description": "The state of the document",
                  "default": "DRAFT"
                }
              },
              "additionalProperties": false
            }
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "Hexadecimal identifier of the document in the collection"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of groups, each one with its own modifications",
        "tags": ["Groups"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "_st": {
                      "type": "string",
                      "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                      "default": "PUBLIC",
                      "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "label": {
                      "type": "string"
                    },
                    "_q": {
                      "type": "string",
                      "description": "Additional query part to forward to MongoDB"
                    }
                  },
                  "additionalProperties": false
                },
                "update": {
                  "type": "object",
                  "properties": {
                    "$set": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$unset": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$inc": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$mul": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$currentDate": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$push": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": ["filter", "update"]
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/groups/{id}/state": {
      "post": {
        "summary": "Change state of an item of groups",
        "tags": ["Groups"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "label",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["stateTo"],
            "properties": {
              "stateTo": {
                "type": "string",
                "enum": ["PUBLIC", "TRASH", "DRAFT", "DELETED"]
              }
            }
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/groups/state": {
      "post": {
        "summary": "Change state of items of groups",
        "tags": ["Groups"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "required": ["_id"],
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "label": {
                      "type": "string"
                    }
                  }
                },
                "stateTo": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"]
                }
              },
              "required": ["filter", "stateTo"],
              "additionalProperties": false
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of updated groups"
            },
            "description": "Number of updated groups"
          }
        }
      }
    },
    "/v2/ingredient/": {
      "get": {
        "summary": "Get a list of ingredient",
        "description": "The list can be filtered specifying the following parameters",
        "tags": ["Ingredient"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|image),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|image)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "_id"
                  },
                  "creatorId": {
                    "type": "string",
                    "description": "creatorId"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "createdAt"
                  },
                  "updaterId": {
                    "type": "string",
                    "description": "updaterId"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "updatedAt"
                  },
                  "__STATE__": {
                    "type": "string",
                    "description": "__STATE__"
                  },
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "post": {
        "summary": "Add a new item to the ingredient collection",
        "tags": ["Ingredient"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "name": {
                "type": "string"
              },
              "image": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "Hexadecimal identifier of the document in the collection"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete items from the ingredient collection",
        "tags": ["Ingredient"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the ingredient collection that match the query",
        "tags": ["Ingredient"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "image": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "the number of documents that were modified"
            },
            "description": "the number of documents that were modified"
          }
        }
      }
    },
    "/v2/ingredient/export": {
      "get": {
        "summary": "Export the ingredient collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": ["Ingredient"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|image),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|image)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/ingredient/{id}": {
      "get": {
        "summary": "Find one item from the ingredient collection by ID",
        "tags": ["Ingredient"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|image),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|image)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "image": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the ingredient collection",
        "tags": ["Ingredient"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the ingredient collection by ID",
        "tags": ["Ingredient"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "image": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "image": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/ingredient/validate": {
      "post": {
        "summary": "Return 200 if the body is valid for an insertion in the ingredient collection",
        "tags": ["Ingredient"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "name": {
                "type": "string"
              },
              "image": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "enum": ["ok"]
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/ingredient/count": {
      "get": {
        "summary": "Count the number of ingredient",
        "tags": ["Ingredient"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/ingredient/upsert-one": {
      "post": {
        "summary": "Update an item of ingredient if it is present, otherwise insert it",
        "tags": ["Ingredient"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "image": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "additionalProperties": false
              },
              "$setOnInsert": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "image": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/ingredient/bulk": {
      "post": {
        "summary": "Insert new ingredient",
        "tags": ["Ingredient"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [],
              "properties": {
                "name": {
                  "type": "string"
                },
                "image": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "__STATE__": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                  "description": "The state of the document",
                  "default": "DRAFT"
                }
              },
              "additionalProperties": false
            }
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "Hexadecimal identifier of the document in the collection"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of ingredient, each one with its own modifications",
        "tags": ["Ingredient"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "_st": {
                      "type": "string",
                      "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                      "default": "PUBLIC",
                      "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_q": {
                      "type": "string",
                      "description": "Additional query part to forward to MongoDB"
                    }
                  },
                  "additionalProperties": false
                },
                "update": {
                  "type": "object",
                  "properties": {
                    "$set": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "image": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": true
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "$unset": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "image": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$inc": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$mul": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$currentDate": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$push": {
                      "type": "object",
                      "properties": {
                        "image": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": ["filter", "update"]
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/ingredient/{id}/state": {
      "post": {
        "summary": "Change state of an item of ingredient",
        "tags": ["Ingredient"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["stateTo"],
            "properties": {
              "stateTo": {
                "type": "string",
                "enum": ["PUBLIC", "TRASH", "DRAFT", "DELETED"]
              }
            }
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/ingredient/state": {
      "post": {
        "summary": "Change state of items of ingredient",
        "tags": ["Ingredient"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "required": ["_id"],
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "stateTo": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"]
                }
              },
              "required": ["filter", "stateTo"],
              "additionalProperties": false
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of updated ingredient"
            },
            "description": "Number of updated ingredient"
          }
        }
      }
    },
    "/v2/invoices/": {
      "get": {
        "summary": "Get a list of invoices",
        "description": "The list can be filtered specifying the following parameters",
        "tags": ["Invoices"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "pIva",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "fiscalCode",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "city",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ficCode",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|date|pIva|fiscalCode|city|address|ficCode),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|date|pIva|fiscalCode|city|address|ficCode)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|date|pIva|fiscalCode|city|ficCode)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "_id"
                  },
                  "creatorId": {
                    "type": "string",
                    "description": "creatorId"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "createdAt"
                  },
                  "updaterId": {
                    "type": "string",
                    "description": "updaterId"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "updatedAt"
                  },
                  "__STATE__": {
                    "type": "string",
                    "description": "__STATE__"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "pIva": {
                    "type": "string"
                  },
                  "fiscalCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "address": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  },
                  "ficCode": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "post": {
        "summary": "Add a new item to the invoices collection",
        "tags": ["Invoices"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "date": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "pIva": {
                "type": "string"
              },
              "fiscalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "address": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 3
              },
              "ficCode": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "Hexadecimal identifier of the document in the collection"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete items from the invoices collection",
        "tags": ["Invoices"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "pIva",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "fiscalCode",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "city",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ficCode",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the invoices collection that match the query",
        "tags": ["Invoices"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "pIva",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "fiscalCode",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "city",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ficCode",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "pIva": {
                    "type": "string"
                  },
                  "fiscalCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "address": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "ficCode": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "pIva": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "fiscalCode": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "city": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "address": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "ficCode": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "the number of documents that were modified"
            },
            "description": "the number of documents that were modified"
          }
        }
      }
    },
    "/v2/invoices/export": {
      "get": {
        "summary": "Export the invoices collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": ["Invoices"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "pIva",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "fiscalCode",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "city",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ficCode",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|date|pIva|fiscalCode|city|address|ficCode),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|date|pIva|fiscalCode|city|address|ficCode)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|date|pIva|fiscalCode|city|ficCode)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/invoices/{id}": {
      "get": {
        "summary": "Find one item from the invoices collection by ID",
        "tags": ["Invoices"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "pIva",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "fiscalCode",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "city",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ficCode",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|date|pIva|fiscalCode|city|address|ficCode),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|date|pIva|fiscalCode|city|address|ficCode)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "pIva": {
                  "type": "string"
                },
                "fiscalCode": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "address": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                "ficCode": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the invoices collection",
        "tags": ["Invoices"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "pIva",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "fiscalCode",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "city",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ficCode",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the invoices collection by ID",
        "tags": ["Invoices"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "pIva",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "fiscalCode",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "city",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ficCode",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "pIva": {
                    "type": "string"
                  },
                  "fiscalCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "address": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "ficCode": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "pIva": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "fiscalCode": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "city": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "address": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "ficCode": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "pIva": {
                  "type": "string"
                },
                "fiscalCode": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "address": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                "ficCode": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/invoices/validate": {
      "post": {
        "summary": "Return 200 if the body is valid for an insertion in the invoices collection",
        "tags": ["Invoices"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "date": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "pIva": {
                "type": "string"
              },
              "fiscalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "address": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 3
              },
              "ficCode": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "enum": ["ok"]
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/invoices/count": {
      "get": {
        "summary": "Count the number of invoices",
        "tags": ["Invoices"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "pIva",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "fiscalCode",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "city",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ficCode",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/invoices/upsert-one": {
      "post": {
        "summary": "Update an item of invoices if it is present, otherwise insert it",
        "tags": ["Invoices"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "pIva",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "fiscalCode",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "city",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ficCode",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "pIva": {
                    "type": "string"
                  },
                  "fiscalCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "address": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "ficCode": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "pIva": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "fiscalCode": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "city": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "address": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "ficCode": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$setOnInsert": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "pIva": {
                    "type": "string"
                  },
                  "fiscalCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "address": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "ficCode": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "pIva": {
                  "type": "string"
                },
                "fiscalCode": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "address": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                "ficCode": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/invoices/bulk": {
      "post": {
        "summary": "Insert new invoices",
        "tags": ["Invoices"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [],
              "properties": {
                "date": {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                  "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                },
                "pIva": {
                  "type": "string"
                },
                "fiscalCode": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "address": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "minItems": 2,
                  "maxItems": 3
                },
                "ficCode": {
                  "type": "string"
                },
                "__STATE__": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                  "description": "The state of the document",
                  "default": "DRAFT"
                }
              },
              "additionalProperties": false
            }
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "Hexadecimal identifier of the document in the collection"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of invoices, each one with its own modifications",
        "tags": ["Invoices"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "_st": {
                      "type": "string",
                      "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                      "default": "PUBLIC",
                      "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "date": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    },
                    "pIva": {
                      "type": "string"
                    },
                    "fiscalCode": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "ficCode": {
                      "type": "string"
                    },
                    "_q": {
                      "type": "string",
                      "description": "Additional query part to forward to MongoDB"
                    }
                  },
                  "additionalProperties": false
                },
                "update": {
                  "type": "object",
                  "properties": {
                    "$set": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                        },
                        "pIva": {
                          "type": "string"
                        },
                        "fiscalCode": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "address": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "minItems": 2,
                          "maxItems": 3
                        },
                        "ficCode": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$unset": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "pIva": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "fiscalCode": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "city": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "address": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "ficCode": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$inc": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$mul": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$currentDate": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$push": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": ["filter", "update"]
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/invoices/{id}/state": {
      "post": {
        "summary": "Change state of an item of invoices",
        "tags": ["Invoices"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "pIva",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "fiscalCode",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "city",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ficCode",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["stateTo"],
            "properties": {
              "stateTo": {
                "type": "string",
                "enum": ["PUBLIC", "TRASH", "DRAFT", "DELETED"]
              }
            }
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/invoices/state": {
      "post": {
        "summary": "Change state of items of invoices",
        "tags": ["Invoices"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "required": ["_id"],
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "date": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    },
                    "pIva": {
                      "type": "string"
                    },
                    "fiscalCode": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "ficCode": {
                      "type": "string"
                    }
                  }
                },
                "stateTo": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"]
                }
              },
              "required": ["filter", "stateTo"],
              "additionalProperties": false
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of updated invoices"
            },
            "description": "Number of updated invoices"
          }
        }
      }
    },
    "/v2/live/": {
      "get": {
        "summary": "Get a list of live",
        "description": "The list can be filtered specifying the following parameters",
        "tags": ["Live"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "endTime",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|startTime|endTime),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|startTime|endTime)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|startTime|endTime)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "_id"
                  },
                  "creatorId": {
                    "type": "string",
                    "description": "creatorId"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "createdAt"
                  },
                  "updaterId": {
                    "type": "string",
                    "description": "updaterId"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "updatedAt"
                  },
                  "__STATE__": {
                    "type": "string",
                    "description": "__STATE__"
                  },
                  "name": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endTime": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "post": {
        "summary": "Add a new item to the live collection",
        "tags": ["Live"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "endTime": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "Hexadecimal identifier of the document in the collection"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete items from the live collection",
        "tags": ["Live"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "endTime",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the live collection that match the query",
        "tags": ["Live"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "endTime",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "endTime": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "startTime": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "endTime": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "endTime": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "the number of documents that were modified"
            },
            "description": "the number of documents that were modified"
          }
        }
      }
    },
    "/v2/live/export": {
      "get": {
        "summary": "Export the live collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": ["Live"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "endTime",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|startTime|endTime),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|startTime|endTime)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|startTime|endTime)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/live/{id}": {
      "get": {
        "summary": "Find one item from the live collection by ID",
        "tags": ["Live"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "endTime",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|startTime|endTime),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|startTime|endTime)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the live collection",
        "tags": ["Live"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "endTime",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the live collection by ID",
        "tags": ["Live"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "endTime",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "endTime": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "startTime": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "endTime": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "endTime": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/live/validate": {
      "post": {
        "summary": "Return 200 if the body is valid for an insertion in the live collection",
        "tags": ["Live"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "name": {
                "type": "string"
              },
              "startTime": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "endTime": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "enum": ["ok"]
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/live/count": {
      "get": {
        "summary": "Count the number of live",
        "tags": ["Live"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "endTime",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/live/upsert-one": {
      "post": {
        "summary": "Update an item of live if it is present, otherwise insert it",
        "tags": ["Live"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "endTime",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "endTime": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "startTime": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "endTime": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "endTime": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$setOnInsert": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "endTime": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/live/bulk": {
      "post": {
        "summary": "Insert new live",
        "tags": ["Live"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [],
              "properties": {
                "name": {
                  "type": "string"
                },
                "startTime": {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                  "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                },
                "endTime": {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                  "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                },
                "__STATE__": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                  "description": "The state of the document",
                  "default": "DRAFT"
                }
              },
              "additionalProperties": false
            }
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "Hexadecimal identifier of the document in the collection"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of live, each one with its own modifications",
        "tags": ["Live"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "_st": {
                      "type": "string",
                      "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                      "default": "PUBLIC",
                      "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    },
                    "endTime": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    },
                    "_q": {
                      "type": "string",
                      "description": "Additional query part to forward to MongoDB"
                    }
                  },
                  "additionalProperties": false
                },
                "update": {
                  "type": "object",
                  "properties": {
                    "$set": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "startTime": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                        },
                        "endTime": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$unset": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "startTime": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "endTime": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$inc": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$mul": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$currentDate": {
                      "type": "object",
                      "properties": {
                        "startTime": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "endTime": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$push": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": ["filter", "update"]
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/live/{id}/state": {
      "post": {
        "summary": "Change state of an item of live",
        "tags": ["Live"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "endTime",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["stateTo"],
            "properties": {
              "stateTo": {
                "type": "string",
                "enum": ["PUBLIC", "TRASH", "DRAFT", "DELETED"]
              }
            }
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/live/state": {
      "post": {
        "summary": "Change state of items of live",
        "tags": ["Live"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "required": ["_id"],
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    },
                    "endTime": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    }
                  }
                },
                "stateTo": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"]
                }
              },
              "required": ["filter", "stateTo"],
              "additionalProperties": false
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of updated live"
            },
            "description": "Number of updated live"
          }
        }
      }
    },
    "/v2/orders/": {
      "get": {
        "summary": "Get a list of orders",
        "description": "The list can be filtered specifying the following parameters",
        "tags": ["Orders"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "total",
          "in": "query"
        }, {
          "type": "boolean",
          "required": false,
          "name": "isLate",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "orderDate",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "rider",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "user",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|total|plate|isLate|orderDate|rider|user|position),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|total|plate|isLate|orderDate|rider|user|position)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|total|isLate|orderDate|rider|user)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "_id"
                  },
                  "creatorId": {
                    "type": "string",
                    "description": "creatorId"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "createdAt"
                  },
                  "updaterId": {
                    "type": "string",
                    "description": "updaterId"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "updatedAt"
                  },
                  "__STATE__": {
                    "type": "string",
                    "description": "__STATE__"
                  },
                  "total": {
                    "type": "number"
                  },
                  "plate": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isLate": {
                    "type": "boolean"
                  },
                  "orderDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "rider": {
                    "type": "string"
                  },
                  "user": {
                    "type": "string"
                  },
                  "position": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "post": {
        "summary": "Add a new item to the orders collection",
        "tags": ["Orders"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "total": {
                "type": "number"
              },
              "plate": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "isLate": {
                "type": "boolean"
              },
              "orderDate": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "rider": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "position": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 3
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "Hexadecimal identifier of the document in the collection"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete items from the orders collection",
        "tags": ["Orders"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "total",
          "in": "query"
        }, {
          "type": "boolean",
          "required": false,
          "name": "isLate",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "orderDate",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "rider",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "user",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the orders collection that match the query",
        "tags": ["Orders"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "total",
          "in": "query"
        }, {
          "type": "boolean",
          "required": false,
          "name": "isLate",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "orderDate",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "rider",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "user",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number"
                  },
                  "plate": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isLate": {
                    "type": "boolean"
                  },
                  "orderDate": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "rider": {
                    "type": "string"
                  },
                  "user": {
                    "type": "string"
                  },
                  "position": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "plate": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "isLate": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "orderDate": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "rider": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "user": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "position": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "orderDate": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {
                  "plate": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "the number of documents that were modified"
            },
            "description": "the number of documents that were modified"
          }
        }
      }
    },
    "/v2/orders/export": {
      "get": {
        "summary": "Export the orders collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": ["Orders"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "total",
          "in": "query"
        }, {
          "type": "boolean",
          "required": false,
          "name": "isLate",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "orderDate",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "rider",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "user",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|total|plate|isLate|orderDate|rider|user|position),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|total|plate|isLate|orderDate|rider|user|position)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|total|isLate|orderDate|rider|user)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders/{id}": {
      "get": {
        "summary": "Find one item from the orders collection by ID",
        "tags": ["Orders"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "total",
          "in": "query"
        }, {
          "type": "boolean",
          "required": false,
          "name": "isLate",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "orderDate",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "rider",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "user",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|total|plate|isLate|orderDate|rider|user|position),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|total|plate|isLate|orderDate|rider|user|position)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "total": {
                  "type": "number"
                },
                "plate": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "isLate": {
                  "type": "boolean"
                },
                "orderDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "rider": {
                  "type": "string"
                },
                "user": {
                  "type": "string"
                },
                "position": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the orders collection",
        "tags": ["Orders"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "total",
          "in": "query"
        }, {
          "type": "boolean",
          "required": false,
          "name": "isLate",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "orderDate",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "rider",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "user",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the orders collection by ID",
        "tags": ["Orders"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "total",
          "in": "query"
        }, {
          "type": "boolean",
          "required": false,
          "name": "isLate",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "orderDate",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "rider",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "user",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number"
                  },
                  "plate": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isLate": {
                    "type": "boolean"
                  },
                  "orderDate": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "rider": {
                    "type": "string"
                  },
                  "user": {
                    "type": "string"
                  },
                  "position": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "plate": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "isLate": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "orderDate": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "rider": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "user": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "position": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "orderDate": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {
                  "plate": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "total": {
                  "type": "number"
                },
                "plate": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "isLate": {
                  "type": "boolean"
                },
                "orderDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "rider": {
                  "type": "string"
                },
                "user": {
                  "type": "string"
                },
                "position": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders/validate": {
      "post": {
        "summary": "Return 200 if the body is valid for an insertion in the orders collection",
        "tags": ["Orders"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "total": {
                "type": "number"
              },
              "plate": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "isLate": {
                "type": "boolean"
              },
              "orderDate": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "rider": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "position": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 3
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "enum": ["ok"]
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders/count": {
      "get": {
        "summary": "Count the number of orders",
        "tags": ["Orders"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "total",
          "in": "query"
        }, {
          "type": "boolean",
          "required": false,
          "name": "isLate",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "orderDate",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "rider",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "user",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders/upsert-one": {
      "post": {
        "summary": "Update an item of orders if it is present, otherwise insert it",
        "tags": ["Orders"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "total",
          "in": "query"
        }, {
          "type": "boolean",
          "required": false,
          "name": "isLate",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "orderDate",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "rider",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "user",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number"
                  },
                  "plate": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isLate": {
                    "type": "boolean"
                  },
                  "orderDate": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "rider": {
                    "type": "string"
                  },
                  "user": {
                    "type": "string"
                  },
                  "position": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "plate": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "isLate": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "orderDate": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "rider": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "user": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "position": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "orderDate": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {
                  "plate": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$setOnInsert": {
                "type": "object",
                "properties": {
                  "total": {
                    "type": "number"
                  },
                  "plate": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isLate": {
                    "type": "boolean"
                  },
                  "orderDate": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "rider": {
                    "type": "string"
                  },
                  "user": {
                    "type": "string"
                  },
                  "position": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "total": {
                  "type": "number"
                },
                "plate": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "isLate": {
                  "type": "boolean"
                },
                "orderDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "rider": {
                  "type": "string"
                },
                "user": {
                  "type": "string"
                },
                "position": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders/bulk": {
      "post": {
        "summary": "Insert new orders",
        "tags": ["Orders"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [],
              "properties": {
                "total": {
                  "type": "number"
                },
                "plate": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "isLate": {
                  "type": "boolean"
                },
                "orderDate": {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                  "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                },
                "rider": {
                  "type": "string"
                },
                "user": {
                  "type": "string"
                },
                "position": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "minItems": 2,
                  "maxItems": 3
                },
                "__STATE__": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                  "description": "The state of the document",
                  "default": "DRAFT"
                }
              },
              "additionalProperties": false
            }
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "Hexadecimal identifier of the document in the collection"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of orders, each one with its own modifications",
        "tags": ["Orders"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "_st": {
                      "type": "string",
                      "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                      "default": "PUBLIC",
                      "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "total": {
                      "type": "number"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "orderDate": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    },
                    "rider": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    },
                    "_q": {
                      "type": "string",
                      "description": "Additional query part to forward to MongoDB"
                    }
                  },
                  "additionalProperties": false
                },
                "update": {
                  "type": "object",
                  "properties": {
                    "$set": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "plate": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isLate": {
                          "type": "boolean"
                        },
                        "orderDate": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                        },
                        "rider": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        },
                        "position": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "minItems": 2,
                          "maxItems": 3
                        }
                      },
                      "additionalProperties": false
                    },
                    "$unset": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "plate": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "isLate": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "orderDate": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "rider": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "user": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "position": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$inc": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$mul": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$currentDate": {
                      "type": "object",
                      "properties": {
                        "orderDate": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$push": {
                      "type": "object",
                      "properties": {
                        "plate": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": ["filter", "update"]
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders/{id}/state": {
      "post": {
        "summary": "Change state of an item of orders",
        "tags": ["Orders"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "total",
          "in": "query"
        }, {
          "type": "boolean",
          "required": false,
          "name": "isLate",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "orderDate",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "rider",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "user",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["stateTo"],
            "properties": {
              "stateTo": {
                "type": "string",
                "enum": ["PUBLIC", "TRASH", "DRAFT", "DELETED"]
              }
            }
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders/state": {
      "post": {
        "summary": "Change state of items of orders",
        "tags": ["Orders"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "required": ["_id"],
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "total": {
                      "type": "number"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "orderDate": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    },
                    "rider": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  }
                },
                "stateTo": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"]
                }
              },
              "required": ["filter", "stateTo"],
              "additionalProperties": false
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of updated orders"
            },
            "description": "Number of updated orders"
          }
        }
      }
    },
    "/v2/plate/": {
      "get": {
        "summary": "Get a list of plates",
        "description": "The list can be filtered specifying the following parameters",
        "tags": ["Plate"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ingredient",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "calories",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|ingredient|image|calories),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|ingredient|image|calories)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|ingredient|calories)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "_id"
                  },
                  "creatorId": {
                    "type": "string",
                    "description": "creatorId"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "createdAt"
                  },
                  "updaterId": {
                    "type": "string",
                    "description": "updaterId"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "updatedAt"
                  },
                  "__STATE__": {
                    "type": "string",
                    "description": "__STATE__"
                  },
                  "name": {
                    "type": "string"
                  },
                  "ingredient": {
                    "type": "string"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "calories": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "post": {
        "summary": "Add a new item to the plates collection",
        "tags": ["Plate"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "name": {
                "type": "string"
              },
              "ingredient": {
                "type": "string"
              },
              "image": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "calories": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "Hexadecimal identifier of the document in the collection"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete items from the plates collection",
        "tags": ["Plate"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ingredient",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "calories",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the plates collection that match the query",
        "tags": ["Plate"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ingredient",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "calories",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "ingredient": {
                    "type": "string"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "calories": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "ingredient": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "image": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "calories": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "the number of documents that were modified"
            },
            "description": "the number of documents that were modified"
          }
        }
      }
    },
    "/v2/plate/export": {
      "get": {
        "summary": "Export the plates collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": ["Plate"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ingredient",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "calories",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|ingredient|image|calories),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|ingredient|image|calories)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|ingredient|calories)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/plate/{id}": {
      "get": {
        "summary": "Find one item from the plates collection by ID",
        "tags": ["Plate"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ingredient",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "calories",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|ingredient|image|calories),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|ingredient|image|calories)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "ingredient": {
                  "type": "string"
                },
                "image": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "calories": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the plates collection",
        "tags": ["Plate"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ingredient",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "calories",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the plates collection by ID",
        "tags": ["Plate"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ingredient",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "calories",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "ingredient": {
                    "type": "string"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "calories": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "ingredient": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "image": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "calories": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "ingredient": {
                  "type": "string"
                },
                "image": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "calories": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/plate/validate": {
      "post": {
        "summary": "Return 200 if the body is valid for an insertion in the plates collection",
        "tags": ["Plate"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "name": {
                "type": "string"
              },
              "ingredient": {
                "type": "string"
              },
              "image": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "calories": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "enum": ["ok"]
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/plate/count": {
      "get": {
        "summary": "Count the number of plates",
        "tags": ["Plate"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ingredient",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "calories",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/plate/upsert-one": {
      "post": {
        "summary": "Update an item of plates if it is present, otherwise insert it",
        "tags": ["Plate"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ingredient",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "calories",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "ingredient": {
                    "type": "string"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "calories": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "ingredient": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "image": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "calories": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "additionalProperties": false
              },
              "$setOnInsert": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "ingredient": {
                    "type": "string"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "calories": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "ingredient": {
                  "type": "string"
                },
                "image": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "calories": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/plate/bulk": {
      "post": {
        "summary": "Insert new plates",
        "tags": ["Plate"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [],
              "properties": {
                "name": {
                  "type": "string"
                },
                "ingredient": {
                  "type": "string"
                },
                "image": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "calories": {
                  "type": "string"
                },
                "__STATE__": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                  "description": "The state of the document",
                  "default": "DRAFT"
                }
              },
              "additionalProperties": false
            }
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "Hexadecimal identifier of the document in the collection"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of plates, each one with its own modifications",
        "tags": ["Plate"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "_st": {
                      "type": "string",
                      "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                      "default": "PUBLIC",
                      "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ingredient": {
                      "type": "string"
                    },
                    "calories": {
                      "type": "string"
                    },
                    "_q": {
                      "type": "string",
                      "description": "Additional query part to forward to MongoDB"
                    }
                  },
                  "additionalProperties": false
                },
                "update": {
                  "type": "object",
                  "properties": {
                    "$set": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "ingredient": {
                          "type": "string"
                        },
                        "image": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": true
                          }
                        },
                        "calories": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$unset": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "ingredient": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "image": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "calories": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$inc": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$mul": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$currentDate": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$push": {
                      "type": "object",
                      "properties": {
                        "image": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": ["filter", "update"]
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/plate/{id}/state": {
      "post": {
        "summary": "Change state of an item of plates",
        "tags": ["Plate"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "ingredient",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "calories",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["stateTo"],
            "properties": {
              "stateTo": {
                "type": "string",
                "enum": ["PUBLIC", "TRASH", "DRAFT", "DELETED"]
              }
            }
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/plate/state": {
      "post": {
        "summary": "Change state of items of plates",
        "tags": ["Plate"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "required": ["_id"],
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ingredient": {
                      "type": "string"
                    },
                    "calories": {
                      "type": "string"
                    }
                  }
                },
                "stateTo": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"]
                }
              },
              "required": ["filter", "stateTo"],
              "additionalProperties": false
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of updated plates"
            },
            "description": "Number of updated plates"
          }
        }
      }
    },
    "/v2/slot/": {
      "get": {
        "summary": "Get a list of preorder",
        "description": "The list can be filtered specifying the following parameters",
        "tags": ["Slot"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "capacity",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "duration",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|startTime|capacity|duration|name),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|startTime|capacity|duration|name)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|startTime|capacity|duration|name)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "_id"
                  },
                  "creatorId": {
                    "type": "string",
                    "description": "creatorId"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "createdAt"
                  },
                  "updaterId": {
                    "type": "string",
                    "description": "updaterId"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "updatedAt"
                  },
                  "__STATE__": {
                    "type": "string",
                    "description": "__STATE__"
                  },
                  "startTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "capacity": {
                    "type": "number"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "post": {
        "summary": "Add a new item to the preorder collection",
        "tags": ["Slot"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "startTime": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "capacity": {
                "type": "number"
              },
              "duration": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "Hexadecimal identifier of the document in the collection"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete items from the preorder collection",
        "tags": ["Slot"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "capacity",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "duration",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the preorder collection that match the query",
        "tags": ["Slot"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "capacity",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "duration",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "capacity": {
                    "type": "number"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "capacity": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "duration": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {
                  "capacity": {
                    "type": "number"
                  },
                  "duration": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {
                  "capacity": {
                    "type": "number"
                  },
                  "duration": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "the number of documents that were modified"
            },
            "description": "the number of documents that were modified"
          }
        }
      }
    },
    "/v2/slot/export": {
      "get": {
        "summary": "Export the preorder collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": ["Slot"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "capacity",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "duration",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|startTime|capacity|duration|name),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|startTime|capacity|duration|name)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|startTime|capacity|duration|name)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/slot/{id}": {
      "get": {
        "summary": "Find one item from the preorder collection by ID",
        "tags": ["Slot"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "capacity",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "duration",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|startTime|capacity|duration|name),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|startTime|capacity|duration|name)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "capacity": {
                  "type": "number"
                },
                "duration": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the preorder collection",
        "tags": ["Slot"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "capacity",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "duration",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the preorder collection by ID",
        "tags": ["Slot"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "capacity",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "duration",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "capacity": {
                    "type": "number"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "capacity": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "duration": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {
                  "capacity": {
                    "type": "number"
                  },
                  "duration": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {
                  "capacity": {
                    "type": "number"
                  },
                  "duration": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "capacity": {
                  "type": "number"
                },
                "duration": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/slot/validate": {
      "post": {
        "summary": "Return 200 if the body is valid for an insertion in the preorder collection",
        "tags": ["Slot"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "startTime": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "capacity": {
                "type": "number"
              },
              "duration": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "enum": ["ok"]
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/slot/count": {
      "get": {
        "summary": "Count the number of preorder",
        "tags": ["Slot"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "capacity",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "duration",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/slot/upsert-one": {
      "post": {
        "summary": "Update an item of preorder if it is present, otherwise insert it",
        "tags": ["Slot"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "capacity",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "duration",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "capacity": {
                    "type": "number"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "capacity": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "duration": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {
                  "capacity": {
                    "type": "number"
                  },
                  "duration": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {
                  "capacity": {
                    "type": "number"
                  },
                  "duration": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$setOnInsert": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "capacity": {
                    "type": "number"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "capacity": {
                  "type": "number"
                },
                "duration": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/slot/bulk": {
      "post": {
        "summary": "Insert new preorder",
        "tags": ["Slot"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [],
              "properties": {
                "startTime": {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                  "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                },
                "capacity": {
                  "type": "number"
                },
                "duration": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "__STATE__": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                  "description": "The state of the document",
                  "default": "DRAFT"
                }
              },
              "additionalProperties": false
            }
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "Hexadecimal identifier of the document in the collection"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of preorder, each one with its own modifications",
        "tags": ["Slot"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "_st": {
                      "type": "string",
                      "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                      "default": "PUBLIC",
                      "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "startTime": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    },
                    "capacity": {
                      "type": "number"
                    },
                    "duration": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_q": {
                      "type": "string",
                      "description": "Additional query part to forward to MongoDB"
                    }
                  },
                  "additionalProperties": false
                },
                "update": {
                  "type": "object",
                  "properties": {
                    "$set": {
                      "type": "object",
                      "properties": {
                        "startTime": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                        },
                        "capacity": {
                          "type": "number"
                        },
                        "duration": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$unset": {
                      "type": "object",
                      "properties": {
                        "startTime": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "capacity": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "duration": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "name": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$inc": {
                      "type": "object",
                      "properties": {
                        "capacity": {
                          "type": "number"
                        },
                        "duration": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$mul": {
                      "type": "object",
                      "properties": {
                        "capacity": {
                          "type": "number"
                        },
                        "duration": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$currentDate": {
                      "type": "object",
                      "properties": {
                        "startTime": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$push": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": ["filter", "update"]
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/slot/{id}/state": {
      "post": {
        "summary": "Change state of an item of preorder",
        "tags": ["Slot"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "startTime",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "capacity",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "duration",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["stateTo"],
            "properties": {
              "stateTo": {
                "type": "string",
                "enum": ["PUBLIC", "TRASH", "DRAFT", "DELETED"]
              }
            }
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/slot/state": {
      "post": {
        "summary": "Change state of items of preorder",
        "tags": ["Slot"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "required": ["_id"],
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "startTime": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    },
                    "capacity": {
                      "type": "number"
                    },
                    "duration": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "stateTo": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"]
                }
              },
              "required": ["filter", "stateTo"],
              "additionalProperties": false
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of updated preorder"
            },
            "description": "Number of updated preorder"
          }
        }
      }
    },
    "/v2/prova/": {
      "get": {
        "summary": "Get a list of prova",
        "description": "The list can be filtered specifying the following parameters",
        "tags": ["Prova"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "prova",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|prova),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|prova)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|prova)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "_id"
                  },
                  "creatorId": {
                    "type": "string",
                    "description": "creatorId"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "createdAt"
                  },
                  "updaterId": {
                    "type": "string",
                    "description": "updaterId"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "updatedAt"
                  },
                  "__STATE__": {
                    "type": "string",
                    "description": "__STATE__"
                  },
                  "prova": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "post": {
        "summary": "Add a new item to the prova collection",
        "tags": ["Prova"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "prova": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "Hexadecimal identifier of the document in the collection"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete items from the prova collection",
        "tags": ["Prova"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "prova",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the prova collection that match the query",
        "tags": ["Prova"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "prova",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "prova": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "prova": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "the number of documents that were modified"
            },
            "description": "the number of documents that were modified"
          }
        }
      }
    },
    "/v2/prova/export": {
      "get": {
        "summary": "Export the prova collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": ["Prova"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "prova",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|prova),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|prova)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|prova)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/prova/{id}": {
      "get": {
        "summary": "Find one item from the prova collection by ID",
        "tags": ["Prova"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "prova",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|prova),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|prova)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "prova": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the prova collection",
        "tags": ["Prova"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "prova",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the prova collection by ID",
        "tags": ["Prova"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "prova",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "prova": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "prova": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "prova": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/prova/validate": {
      "post": {
        "summary": "Return 200 if the body is valid for an insertion in the prova collection",
        "tags": ["Prova"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "prova": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "enum": ["ok"]
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/prova/count": {
      "get": {
        "summary": "Count the number of prova",
        "tags": ["Prova"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "prova",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/prova/upsert-one": {
      "post": {
        "summary": "Update an item of prova if it is present, otherwise insert it",
        "tags": ["Prova"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "prova",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "prova": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "prova": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$setOnInsert": {
                "type": "object",
                "properties": {
                  "prova": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "prova": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/prova/bulk": {
      "post": {
        "summary": "Insert new prova",
        "tags": ["Prova"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [],
              "properties": {
                "prova": {
                  "type": "string"
                },
                "__STATE__": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                  "description": "The state of the document",
                  "default": "DRAFT"
                }
              },
              "additionalProperties": false
            }
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "Hexadecimal identifier of the document in the collection"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of prova, each one with its own modifications",
        "tags": ["Prova"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "_st": {
                      "type": "string",
                      "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                      "default": "PUBLIC",
                      "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "prova": {
                      "type": "string"
                    },
                    "_q": {
                      "type": "string",
                      "description": "Additional query part to forward to MongoDB"
                    }
                  },
                  "additionalProperties": false
                },
                "update": {
                  "type": "object",
                  "properties": {
                    "$set": {
                      "type": "object",
                      "properties": {
                        "prova": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$unset": {
                      "type": "object",
                      "properties": {
                        "prova": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$inc": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$mul": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$currentDate": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$push": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": ["filter", "update"]
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/prova/{id}/state": {
      "post": {
        "summary": "Change state of an item of prova",
        "tags": ["Prova"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "prova",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["stateTo"],
            "properties": {
              "stateTo": {
                "type": "string",
                "enum": ["PUBLIC", "TRASH", "DRAFT", "DELETED"]
              }
            }
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/prova/state": {
      "post": {
        "summary": "Change state of items of prova",
        "tags": ["Prova"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "required": ["_id"],
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "prova": {
                      "type": "string"
                    }
                  }
                },
                "stateTo": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"]
                }
              },
              "required": ["filter", "stateTo"],
              "additionalProperties": false
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of updated prova"
            },
            "description": "Number of updated prova"
          }
        }
      }
    },
    "/v2/riders/": {
      "get": {
        "summary": "Get a list of riders",
        "description": "The list can be filtered specifying the following parameters",
        "tags": ["Riders"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "surname",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "email",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "skypeId",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "chat",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|surname|date|position|image|email|skypeId|chat),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|surname|date|position|image|email|skypeId|chat)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|surname|date|email|skypeId|chat)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "_id"
                  },
                  "creatorId": {
                    "type": "string",
                    "description": "creatorId"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "createdAt"
                  },
                  "updaterId": {
                    "type": "string",
                    "description": "updaterId"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "updatedAt"
                  },
                  "__STATE__": {
                    "type": "string",
                    "description": "__STATE__"
                  },
                  "name": {
                    "type": "string"
                  },
                  "surname": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "position": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "email": {
                    "type": "string"
                  },
                  "skypeId": {
                    "type": "string"
                  },
                  "chat": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "post": {
        "summary": "Add a new item to the riders collection",
        "tags": ["Riders"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "name": {
                "type": "string"
              },
              "surname": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "position": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 3
              },
              "image": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "email": {
                "type": "string"
              },
              "skypeId": {
                "type": "string"
              },
              "chat": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "Hexadecimal identifier of the document in the collection"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete items from the riders collection",
        "tags": ["Riders"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "surname",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "email",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "skypeId",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "chat",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the riders collection that match the query",
        "tags": ["Riders"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "surname",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "email",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "skypeId",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "chat",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "surname": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "position": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "email": {
                    "type": "string"
                  },
                  "skypeId": {
                    "type": "string"
                  },
                  "chat": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "surname": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "position": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "image": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "email": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "skypeId": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "chat": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "the number of documents that were modified"
            },
            "description": "the number of documents that were modified"
          }
        }
      }
    },
    "/v2/riders/export": {
      "get": {
        "summary": "Export the riders collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": ["Riders"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "surname",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "email",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "skypeId",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "chat",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|surname|date|position|image|email|skypeId|chat),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|surname|date|position|image|email|skypeId|chat)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|surname|date|email|skypeId|chat)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/riders/{id}": {
      "get": {
        "summary": "Find one item from the riders collection by ID",
        "tags": ["Riders"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "surname",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "email",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "skypeId",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "chat",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|surname|date|position|image|email|skypeId|chat),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|surname|date|position|image|email|skypeId|chat)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "surname": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "position": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                "image": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "email": {
                  "type": "string"
                },
                "skypeId": {
                  "type": "string"
                },
                "chat": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the riders collection",
        "tags": ["Riders"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "surname",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "email",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "skypeId",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "chat",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the riders collection by ID",
        "tags": ["Riders"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "surname",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "email",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "skypeId",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "chat",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "surname": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "position": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "email": {
                    "type": "string"
                  },
                  "skypeId": {
                    "type": "string"
                  },
                  "chat": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "surname": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "position": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "image": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "email": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "skypeId": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "chat": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "surname": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "position": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                "image": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "email": {
                  "type": "string"
                },
                "skypeId": {
                  "type": "string"
                },
                "chat": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/riders/validate": {
      "post": {
        "summary": "Return 200 if the body is valid for an insertion in the riders collection",
        "tags": ["Riders"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "name": {
                "type": "string"
              },
              "surname": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "position": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 3
              },
              "image": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": true
                }
              },
              "email": {
                "type": "string"
              },
              "skypeId": {
                "type": "string"
              },
              "chat": {
                "type": "string"
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "enum": ["ok"]
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/riders/count": {
      "get": {
        "summary": "Count the number of riders",
        "tags": ["Riders"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "surname",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "email",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "skypeId",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "chat",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/riders/upsert-one": {
      "post": {
        "summary": "Update an item of riders if it is present, otherwise insert it",
        "tags": ["Riders"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "surname",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "email",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "skypeId",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "chat",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "surname": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "position": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "email": {
                    "type": "string"
                  },
                  "skypeId": {
                    "type": "string"
                  },
                  "chat": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "surname": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "position": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "image": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "email": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "skypeId": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "chat": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "additionalProperties": false
              },
              "$setOnInsert": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "surname": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "position": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "email": {
                    "type": "string"
                  },
                  "skypeId": {
                    "type": "string"
                  },
                  "chat": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "name": {
                  "type": "string"
                },
                "surname": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "position": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                "image": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "email": {
                  "type": "string"
                },
                "skypeId": {
                  "type": "string"
                },
                "chat": {
                  "type": "string"
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/riders/bulk": {
      "post": {
        "summary": "Insert new riders",
        "tags": ["Riders"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [],
              "properties": {
                "name": {
                  "type": "string"
                },
                "surname": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                  "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                },
                "position": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "minItems": 2,
                  "maxItems": 3
                },
                "image": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "email": {
                  "type": "string"
                },
                "skypeId": {
                  "type": "string"
                },
                "chat": {
                  "type": "string"
                },
                "__STATE__": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                  "description": "The state of the document",
                  "default": "DRAFT"
                }
              },
              "additionalProperties": false
            }
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "Hexadecimal identifier of the document in the collection"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of riders, each one with its own modifications",
        "tags": ["Riders"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "_st": {
                      "type": "string",
                      "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                      "default": "PUBLIC",
                      "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "name": {
                      "type": "string"
                    },
                    "surname": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    },
                    "email": {
                      "type": "string"
                    },
                    "skypeId": {
                      "type": "string"
                    },
                    "chat": {
                      "type": "string"
                    },
                    "_q": {
                      "type": "string",
                      "description": "Additional query part to forward to MongoDB"
                    }
                  },
                  "additionalProperties": false
                },
                "update": {
                  "type": "object",
                  "properties": {
                    "$set": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "surname": {
                          "type": "string"
                        },
                        "date": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                        },
                        "position": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "minItems": 2,
                          "maxItems": 3
                        },
                        "image": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": true
                          }
                        },
                        "email": {
                          "type": "string"
                        },
                        "skypeId": {
                          "type": "string"
                        },
                        "chat": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$unset": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "surname": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "date": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "position": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "image": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "email": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "skypeId": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "chat": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$inc": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$mul": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    },
                    "$currentDate": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$push": {
                      "type": "object",
                      "properties": {
                        "image": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": ["filter", "update"]
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/riders/{id}/state": {
      "post": {
        "summary": "Change state of an item of riders",
        "tags": ["Riders"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "name",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "surname",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "email",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "skypeId",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "chat",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["stateTo"],
            "properties": {
              "stateTo": {
                "type": "string",
                "enum": ["PUBLIC", "TRASH", "DRAFT", "DELETED"]
              }
            }
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/riders/state": {
      "post": {
        "summary": "Change state of items of riders",
        "tags": ["Riders"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "required": ["_id"],
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "name": {
                      "type": "string"
                    },
                    "surname": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    },
                    "email": {
                      "type": "string"
                    },
                    "skypeId": {
                      "type": "string"
                    },
                    "chat": {
                      "type": "string"
                    }
                  }
                },
                "stateTo": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"]
                }
              },
              "required": ["filter", "stateTo"],
              "additionalProperties": false
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of updated riders"
            },
            "description": "Number of updated riders"
          }
        }
      }
    },
    "/v2/test/": {
      "get": {
        "summary": "Get a list of test",
        "description": "The list can be filtered specifying the following parameters",
        "tags": ["Test"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "string",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "number",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|string|number|date|geopoint|object),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|string|number|date|geopoint|object)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|string|number|date)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "_id"
                  },
                  "creatorId": {
                    "type": "string",
                    "description": "creatorId"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "createdAt"
                  },
                  "updaterId": {
                    "type": "string",
                    "description": "updaterId"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "updatedAt"
                  },
                  "__STATE__": {
                    "type": "string",
                    "description": "__STATE__"
                  },
                  "string": {
                    "type": "string"
                  },
                  "number": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "geopoint": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  },
                  "object": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "post": {
        "summary": "Add a new item to the test collection",
        "tags": ["Test"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "string": {
                "type": "string"
              },
              "number": {
                "type": "number"
              },
              "date": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "geopoint": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 3
              },
              "object": {
                "type": "object",
                "additionalProperties": true
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "Hexadecimal identifier of the document in the collection"
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete items from the test collection",
        "tags": ["Test"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "string",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "number",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the test collection that match the query",
        "tags": ["Test"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "string",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "number",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "string": {
                    "type": "string"
                  },
                  "number": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "geopoint": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "object": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "string": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "number": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "geopoint": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "object": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "the number of documents that were modified"
            },
            "description": "the number of documents that were modified"
          }
        }
      }
    },
    "/v2/test/export": {
      "get": {
        "summary": "Export the test collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": ["Test"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "string",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "number",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|string|number|date|geopoint|object),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|string|number|date|geopoint|object)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Limits the number of documents",
          "required": false,
          "name": "_l",
          "in": "query"
        }, {
          "type": "integer",
          "minimum": 0,
          "description": "Skip the specified number of documents",
          "required": false,
          "name": "_sk",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|string|number|date)$",
          "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
          "required": false,
          "name": "_s",
          "in": "query"
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/test/{id}": {
      "get": {
        "summary": "Find one item from the test collection by ID",
        "tags": ["Test"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "string",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "number",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|string|number|date|geopoint|object),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|string|number|date|geopoint|object)$",
          "description": "Return only the properties specified in a comma separated list",
          "required": false,
          "name": "_p",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "string": {
                  "type": "string"
                },
                "number": {
                  "type": "number"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "geopoint": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                "object": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the test collection",
        "tags": ["Test"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "string",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "number",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the test collection by ID",
        "tags": ["Test"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "string",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "number",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "string": {
                    "type": "string"
                  },
                  "number": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "geopoint": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "object": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "string": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "number": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "geopoint": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "object": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "string": {
                  "type": "string"
                },
                "number": {
                  "type": "number"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "geopoint": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                "object": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/test/validate": {
      "post": {
        "summary": "Return 200 if the body is valid for an insertion in the test collection",
        "tags": ["Test"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "string": {
                "type": "string"
              },
              "number": {
                "type": "number"
              },
              "date": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
              },
              "geopoint": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 3
              },
              "object": {
                "type": "object",
                "additionalProperties": true
              },
              "__STATE__": {
                "type": "string",
                "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                "description": "The state of the document",
                "default": "DRAFT"
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "enum": ["ok"]
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/test/count": {
      "get": {
        "summary": "Count the number of test",
        "tags": ["Test"],
        "parameters": [{
          "type": "string",
          "pattern": "^[a-fA-F\\d]{24}$",
          "description": "Hexadecimal identifier of the document in the collection",
          "required": false,
          "name": "_id",
          "in": "query"
        }, {
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "string",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "number",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/test/upsert-one": {
      "post": {
        "summary": "Update an item of test if it is present, otherwise insert it",
        "tags": ["Test"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "string",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "number",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
          "default": "PUBLIC",
          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
          "required": false,
          "name": "_st",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "$set": {
                "type": "object",
                "properties": {
                  "string": {
                    "type": "string"
                  },
                  "number": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "geopoint": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "object": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "additionalProperties": false
              },
              "$unset": {
                "type": "object",
                "properties": {
                  "string": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "number": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "geopoint": {
                    "type": "boolean",
                    "enum": [true]
                  },
                  "object": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$inc": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$mul": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "$currentDate": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "boolean",
                    "enum": [true]
                  }
                },
                "additionalProperties": false
              },
              "$push": {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              },
              "$setOnInsert": {
                "type": "object",
                "properties": {
                  "string": {
                    "type": "string"
                  },
                  "number": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                  },
                  "geopoint": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "object": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "_id"
                },
                "creatorId": {
                  "type": "string",
                  "description": "creatorId"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt"
                },
                "updaterId": {
                  "type": "string",
                  "description": "updaterId"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt"
                },
                "__STATE__": {
                  "type": "string",
                  "description": "__STATE__"
                },
                "string": {
                  "type": "string"
                },
                "number": {
                  "type": "number"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "geopoint": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                "object": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/test/bulk": {
      "post": {
        "summary": "Insert new test",
        "tags": ["Test"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [],
              "properties": {
                "string": {
                  "type": "string"
                },
                "number": {
                  "type": "number"
                },
                "date": {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                  "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                },
                "geopoint": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "minItems": 2,
                  "maxItems": 3
                },
                "object": {
                  "type": "object",
                  "additionalProperties": true
                },
                "__STATE__": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"],
                  "description": "The state of the document",
                  "default": "DRAFT"
                }
              },
              "additionalProperties": false
            }
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "Hexadecimal identifier of the document in the collection"
                  }
                }
              }
            },
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of test, each one with its own modifications",
        "tags": ["Test"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "_st": {
                      "type": "string",
                      "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                      "default": "PUBLIC",
                      "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "string": {
                      "type": "string"
                    },
                    "number": {
                      "type": "number"
                    },
                    "date": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    },
                    "_q": {
                      "type": "string",
                      "description": "Additional query part to forward to MongoDB"
                    }
                  },
                  "additionalProperties": false
                },
                "update": {
                  "type": "object",
                  "properties": {
                    "$set": {
                      "type": "object",
                      "properties": {
                        "string": {
                          "type": "string"
                        },
                        "number": {
                          "type": "number"
                        },
                        "date": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                        },
                        "geopoint": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "minItems": 2,
                          "maxItems": 3
                        },
                        "object": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "additionalProperties": false
                    },
                    "$unset": {
                      "type": "object",
                      "properties": {
                        "string": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "number": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "date": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "geopoint": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "object": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$inc": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$mul": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "$currentDate": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "additionalProperties": false
                    },
                    "$push": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": ["filter", "update"]
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/test/{id}/state": {
      "post": {
        "summary": "Change state of an item of test",
        "tags": ["Test"],
        "parameters": [{
          "type": "string",
          "description": "creatorId",
          "required": false,
          "name": "creatorId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "createdAt",
          "required": false,
          "name": "createdAt",
          "in": "query"
        }, {
          "type": "string",
          "description": "updaterId",
          "required": false,
          "name": "updaterId",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "updatedAt",
          "required": false,
          "name": "updatedAt",
          "in": "query"
        }, {
          "type": "string",
          "required": false,
          "name": "string",
          "in": "query"
        }, {
          "type": "number",
          "required": false,
          "name": "number",
          "in": "query"
        }, {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
          "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
          "required": false,
          "name": "date",
          "in": "query"
        }, {
          "type": "string",
          "description": "Additional query part to forward to MongoDB",
          "required": false,
          "name": "_q",
          "in": "query"
        }, {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["stateTo"],
            "properties": {
              "stateTo": {
                "type": "string",
                "enum": ["PUBLIC", "TRASH", "DRAFT", "DELETED"]
              }
            }
          }
        }, {
          "type": "string",
          "description": "the doc _id",
          "name": "id",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/test/state": {
      "post": {
        "summary": "Change state of items of test",
        "tags": ["Test"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "required": ["_id"],
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "updatedAt"
                    },
                    "string": {
                      "type": "string"
                    },
                    "number": {
                      "type": "number"
                    },
                    "date": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6"
                    }
                  }
                },
                "stateTo": {
                  "type": "string",
                  "enum": ["PUBLIC", "DRAFT", "TRASH", "DELETED"]
                }
              },
              "required": ["filter", "stateTo"],
              "additionalProperties": false
            },
            "minItems": 1
          }
        }],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of updated test"
            },
            "description": "Number of updated test"
          }
        }
      }
    },
    "/v2/join/one-to-one/{from}/{to}/export": {
      "post": {
        "tags": ["CRUD Join"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["asField", "localField", "foreignField"],
            "properties": {
              "fromQueryFilter": {
                "type": "object",
                "default": {}
              },
              "toQueryFilter": {
                "type": "object",
                "default": {}
              },
              "asField": {
                "type": "string"
              },
              "localField": {
                "type": "string"
              },
              "foreignField": {
                "type": "string"
              },
              "fromProjectBefore": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fromProjectAfter": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "toProjectBefore": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "toProjectAfter": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "toMerge": {
                "type": "boolean",
                "default": false
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "name": "from",
          "in": "path",
          "required": true
        }, {
          "type": "string",
          "name": "to",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/join/one-to-one/{from}/{to}/": {
      "post": {
        "tags": ["CRUD Join"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["asField", "localField", "foreignField"],
            "properties": {
              "fromQueryFilter": {
                "type": "object",
                "default": {}
              },
              "toQueryFilter": {
                "type": "object",
                "default": {}
              },
              "asField": {
                "type": "string"
              },
              "localField": {
                "type": "string"
              },
              "foreignField": {
                "type": "string"
              },
              "fromProjectBefore": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fromProjectAfter": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "toProjectBefore": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "toProjectAfter": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "toMerge": {
                "type": "boolean",
                "default": false
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "name": "from",
          "in": "path",
          "required": true
        }, {
          "type": "string",
          "name": "to",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/join/one-to-many/{from}/{to}/export": {
      "post": {
        "tags": ["CRUD Join"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["asField", "localField", "foreignField"],
            "properties": {
              "fromQueryFilter": {
                "type": "object",
                "default": {}
              },
              "toQueryFilter": {
                "type": "object",
                "default": {}
              },
              "asField": {
                "type": "string"
              },
              "localField": {
                "type": "string"
              },
              "foreignField": {
                "type": "string"
              },
              "fromProjectBefore": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fromProjectAfter": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "toProjectBefore": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "toProjectAfter": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "name": "from",
          "in": "path",
          "required": true
        }, {
          "type": "string",
          "name": "to",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/join/many-to-many/{from}/{to}/export": {
      "post": {
        "tags": ["CRUD Join"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "required": ["asField", "localField", "foreignField"],
            "properties": {
              "fromQueryFilter": {
                "type": "object",
                "default": {}
              },
              "toQueryFilter": {
                "type": "object",
                "default": {}
              },
              "asField": {
                "type": "string"
              },
              "localField": {
                "type": "string"
              },
              "foreignField": {
                "type": "string"
              },
              "fromProjectBefore": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fromProjectAfter": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "toProjectBefore": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "toProjectAfter": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        }, {
          "type": "string",
          "name": "from",
          "in": "path",
          "required": true
        }, {
          "type": "string",
          "name": "to",
          "in": "path",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    }
  },
  "tags": [],
  "definitions": {}
}
